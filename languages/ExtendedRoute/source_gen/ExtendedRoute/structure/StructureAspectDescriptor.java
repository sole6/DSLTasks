package ExtendedRoute.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(4);
  /*package*/ final ConceptDescriptor myConceptExtendedCanvas = createDescriptorForExtendedCanvas();
  /*package*/ final ConceptDescriptor myConceptForwardExtended = createDescriptorForForwardExtended();
  /*package*/ final ConceptDescriptor myConceptVariable = createDescriptorForVariable();
  /*package*/ final ConceptDescriptor myConceptforwardExpression = createDescriptorForforwardExpression();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptExtendedCanvas.getId(), 0);
    myIndexMap.put(myConceptForwardExtended.getId(), 1);
    myIndexMap.put(myConceptVariable.getId(), 2);
    myIndexMap.put(myConceptforwardExpression.getId(), 3);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptExtendedCanvas, myConceptForwardExtended, myConceptVariable, myConceptforwardExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptExtendedCanvas;
      case 1:
        return myConceptForwardExtended;
      case 2:
        return myConceptVariable;
      case 3:
        return myConceptforwardExpression;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForExtendedCanvas() {
    return new ConceptDescriptorBuilder("ExtendedRoute.structure.ExtendedCanvas", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x1dd373fc510766b2L)).super_("Route.structure.Canvas").version(1).super_(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x3d515f5bd038dcf8L)).parents("Route.structure.Canvas", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x3d515f5bd038dcf8L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x582dbe9ad45f2f9aL, "variables", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x1dd373fc51081080L), true, false, false, new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "6353944221486886810"))).children(new String[]{"variables"}, new boolean[]{false}).rootable().alias("extendedcanvas", "").sourceNode(new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "2149188974714250930")).create();
  }
  private static ConceptDescriptor createDescriptorForForwardExtended() {
    return new ConceptDescriptorBuilder("ExtendedRoute.structure.ForwardExtended", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x1dd373fc5108f645L)).super_("Route.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x19ddfc99899482afL)).parents("Route.structure.Command").parentIds(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x19ddfc99899482afL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(0x582dbe9ad45a3f33L, "length", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x1dd373fc51081080L), false, new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "6353944221486563123"))).references("length").alias("ForwardEx", "").sourceNode(new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "2149188974714353221")).create();
  }
  private static ConceptDescriptor createDescriptorForVariable() {
    return new ConceptDescriptorBuilder("ExtendedRoute.structure.Variable", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x1dd373fc51081080L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x1dd373fc510810b7L, "var", new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "2149188974714294455"))).properties("var").alias("variable", "").sourceNode(new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "2149188974714294400")).create();
  }
  private static ConceptDescriptor createDescriptorForforwardExpression() {
    return new ConceptDescriptorBuilder("ExtendedRoute.structure.forwardExpression", MetaIdFactory.conceptId(0xbb2249589654857L, 0xb2e5c6c1ae35c7ceL, 0x582dbe9ad4764fc9L)).super_("Route.structure.Command").version(1).super_(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x19ddfc99899482afL)).parents("Route.structure.Command").parentIds(MetaIdFactory.conceptId(0xa5a3f5242a154733L, 0xb0f02be616993f8dL, 0x19ddfc99899482afL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x582dbe9ad476bef4L, "sum", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7fbL), false, false, false, new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "6353944221488430836"))).children(new String[]{"sum"}, new boolean[]{false}).alias("ForwardWitheX", "").sourceNode(new SNodePointer("r:8a4135af-473a-47f6-ae2f-ade7bd95bb9a(ExtendedRoute.structure)", "6353944221488402377")).create();
  }
}
